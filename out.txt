Requirement already satisfied: lit in /home/nhat/.pyenv/versions/3.9.15/lib/python3.9/site-packages (16.0.6)
-- Testing: 57 tests, 16 workers --
PASS: TRITON-SHARED :: Conversion/TritonToLinalg/reducesum_512_256_f32_axis0.mlir (1 of 57)
FAIL: TRITON-SHARED :: Conversion/TritonToLinalg/addptr_for_used_after_update.mlir (2 of 57)
******************** TEST 'TRITON-SHARED :: Conversion/TritonToLinalg/addptr_for_used_after_update.mlir' FAILED ********************
Script:
--
: 'RUN: at line 1';   /home/nhat/github/triton/python/build/cmake.linux-x86_64-cpython-3.9/third_party/triton_shared/tools/triton-shared-opt/triton-shared-opt --triton-to-linalg /home/nhat/github/triton/third_party/triton_shared/test/Conversion/TritonToLinalg/addptr_for_used_after_update.mlir | FileCheck /home/nhat/github/triton/third_party/triton_shared/test/Conversion/TritonToLinalg/addptr_for_used_after_update.mlir
--
Exit Code: 1

Command Output (stderr):
--
/home/nhat/github/triton/third_party/triton_shared/test/Conversion/TritonToLinalg/addptr_for_used_after_update.mlir:83:15: error: CHECK-DAG: expected string not found in input
// CHECK-DAG: %[[VAL_4:.*]] = arith.constant 4 : index
              ^
<stdin>:2:116: note: scanning from here
 func.func @kernel(%arg0: memref<*xbf16>, %arg1: i32, %arg2: i32, %arg3: i32, %arg4: i32, %arg5: i32, %arg6: i32) {
                                                                                                                   ^
<stdin>:3:2: note: possible intended match here
 %c1 = arith.constant 1 : index
 ^

Input file: <stdin>
Check file: /home/nhat/github/triton/third_party/triton_shared/test/Conversion/TritonToLinalg/addptr_for_used_after_update.mlir

-dump-input=help explains the following input dump.

Input was:
<<<<<<
          1: module { 
          2:  func.func @kernel(%arg0: memref<*xbf16>, %arg1: i32, %arg2: i32, %arg3: i32, %arg4: i32, %arg5: i32, %arg6: i32) { 
dag:83'0                                                                                                                        X error: no match found
          3:  %c1 = arith.constant 1 : index 
dag:83'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
dag:83'1      ?                               possible intended match
          4:  %c1024 = arith.constant 1024 : index 
dag:83'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
          5:  %c0 = arith.constant 0 : index 
dag:83'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
          6:  %c12 = arith.constant 12 : index 
dag:83'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
          7:  %c3 = arith.constant 3 : index 
dag:83'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
          8:  %0 = scf.for %arg7 = %c0 to %c12 step %c3 iter_args(%arg8 = %c1024) -> (index) { 
dag:83'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
          .
          .
          .
>>>>>>

--

********************
FAIL: TRITON-SHARED :: Conversion/TritonToLinalg/addptr_for_used_before_update.mlir (3 of 57)
******************** TEST 'TRITON-SHARED :: Conversion/TritonToLinalg/addptr_for_used_before_update.mlir' FAILED ********************
Script:
--
: 'RUN: at line 1';   /home/nhat/github/triton/python/build/cmake.linux-x86_64-cpython-3.9/third_party/triton_shared/tools/triton-shared-opt/triton-shared-opt --triton-to-linalg /home/nhat/github/triton/third_party/triton_shared/test/Conversion/TritonToLinalg/addptr_for_used_before_update.mlir | FileCheck /home/nhat/github/triton/third_party/triton_shared/test/Conversion/TritonToLinalg/addptr_for_used_before_update.mlir
--
Exit Code: 1

Command Output (stderr):
--
/home/nhat/github/triton/third_party/triton_shared/test/Conversion/TritonToLinalg/addptr_for_used_before_update.mlir:39:15: error: CHECK-DAG: expected string not found in input
// CHECK-DAG: %[[VAL_4:.*]] = arith.constant 4 : index
              ^
<stdin>:2:116: note: scanning from here
 func.func @kernel(%arg0: memref<*xbf16>, %arg1: i32, %arg2: i32, %arg3: i32, %arg4: i32, %arg5: i32, %arg6: i32) {
                                                                                                                   ^
<stdin>:3:2: note: possible intended match here
 %c1 = arith.constant 1 : index
 ^

Input file: <stdin>
Check file: /home/nhat/github/triton/third_party/triton_shared/test/Conversion/TritonToLinalg/addptr_for_used_before_update.mlir

-dump-input=help explains the following input dump.

Input was:
<<<<<<
          1: module { 
          2:  func.func @kernel(%arg0: memref<*xbf16>, %arg1: i32, %arg2: i32, %arg3: i32, %arg4: i32, %arg5: i32, %arg6: i32) { 
dag:39'0                                                                                                                        X error: no match found
          3:  %c1 = arith.constant 1 : index 
dag:39'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
dag:39'1      ?                               possible intended match
          4:  %c1024 = arith.constant 1024 : index 
dag:39'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
          5:  %c0 = arith.constant 0 : index 
dag:39'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
          6:  %c12 = arith.constant 12 : index 
dag:39'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
          7:  %c3 = arith.constant 3 : index 
dag:39'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
          8:  %reinterpret_cast = memref.reinterpret_cast %arg0 to offset: [%c1024], sizes: [256], strides: [%c1] : memref<*xbf16> to memref<256xbf16, strided<[?], offset: ?>> 
dag:39'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
          .
          .
          .
>>>>>>

--

********************
FAIL: TRITON-SHARED :: Conversion/TritonToLinalg/addptr_mul_value_const.mlir (4 of 57)
******************** TEST 'TRITON-SHARED :: Conversion/TritonToLinalg/addptr_mul_value_const.mlir' FAILED ********************
Script:
--
: 'RUN: at line 1';   /home/nhat/github/triton/python/build/cmake.linux-x86_64-cpython-3.9/third_party/triton_shared/tools/triton-shared-opt/triton-shared-opt --triton-to-linalg /home/nhat/github/triton/third_party/triton_shared/test/Conversion/TritonToLinalg/addptr_mul_value_const.mlir | FileCheck /home/nhat/github/triton/third_party/triton_shared/test/Conversion/TritonToLinalg/addptr_mul_value_const.mlir
--
Exit Code: 1

Command Output (stderr):
--
/home/nhat/github/triton/third_party/triton_shared/test/Conversion/TritonToLinalg/addptr_mul_value_const.mlir:37:15: error: CHECK-DAG: expected string not found in input
// CHECK-DAG: %[[VAL_7:.*]] = arith.constant 2 : index
              ^
<stdin>:2:151: note: scanning from here
 func.func @kernel(%arg0: memref<*xbf16>, %arg1: memref<*xbf16>, %arg2: i32, %arg3: i32, %arg4: i32, %arg5: i32, %arg6: i32, %arg7: i32, %arg8: i32) {
                                                                                                                                                      ^
<stdin>:3:2: note: possible intended match here
 %c1 = arith.constant 1 : index
 ^

Input file: <stdin>
Check file: /home/nhat/github/triton/third_party/triton_shared/test/Conversion/TritonToLinalg/addptr_mul_value_const.mlir

-dump-input=help explains the following input dump.

Input was:
<<<<<<
          1: module { 
          2:  func.func @kernel(%arg0: memref<*xbf16>, %arg1: memref<*xbf16>, %arg2: i32, %arg3: i32, %arg4: i32, %arg5: i32, %arg6: i32, %arg7: i32, %arg8: i32) { 
dag:37'0                                                                                                                                                           X error: no match found
          3:  %c1 = arith.constant 1 : index 
dag:37'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
dag:37'1      ?                               possible intended match
          4:  %c2048 = arith.constant 2048 : index 
dag:37'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
          5:  %0 = arith.index_cast %arg6 : i32 to index 
dag:37'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
          6:  %1 = arith.index_cast %arg2 : i32 to index 
dag:37'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
          7:  %2 = arith.muli %1, %c2048 : index 
dag:37'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
          8:  %3 = arith.addi %0, %2 : index 
dag:37'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
          .
          .
          .
>>>>>>

--

********************
FAIL: TRITON-SHARED :: Conversion/TritonToLinalg/addptr_for_more_init_args.mlir (5 of 57)
******************** TEST 'TRITON-SHARED :: Conversion/TritonToLinalg/addptr_for_more_init_args.mlir' FAILED ********************
Script:
--
: 'RUN: at line 1';   /home/nhat/github/triton/python/build/cmake.linux-x86_64-cpython-3.9/third_party/triton_shared/tools/triton-shared-opt/triton-shared-opt --triton-to-linalg /home/nhat/github/triton/third_party/triton_shared/test/Conversion/TritonToLinalg/addptr_for_more_init_args.mlir | FileCheck /home/nhat/github/triton/third_party/triton_shared/test/Conversion/TritonToLinalg/addptr_for_more_init_args.mlir
--
Exit Code: 1

Command Output (stderr):
--
/home/nhat/github/triton/third_party/triton_shared/test/Conversion/TritonToLinalg/addptr_for_more_init_args.mlir:46:15: error: CHECK-DAG: expected string not found in input
// CHECK-DAG: %[[VAL_5:.*]] = arith.constant 4 : index
              ^
<stdin>:2:139: note: scanning from here
 func.func @kernel(%arg0: memref<*xbf16>, %arg1: memref<*xbf16>, %arg2: i32, %arg3: i32, %arg4: i32, %arg5: i32, %arg6: i32, %arg7: i32) {
                                                                                                                                          ^
<stdin>:4:2: note: possible intended match here
 %c0 = arith.constant 0 : index
 ^

Input file: <stdin>
Check file: /home/nhat/github/triton/third_party/triton_shared/test/Conversion/TritonToLinalg/addptr_for_more_init_args.mlir

-dump-input=help explains the following input dump.

Input was:
<<<<<<
          1: module { 
          2:  func.func @kernel(%arg0: memref<*xbf16>, %arg1: memref<*xbf16>, %arg2: i32, %arg3: i32, %arg4: i32, %arg5: i32, %arg6: i32, %arg7: i32) { 
dag:46'0                                                                                                                                               X error: no match found
          3:  %c1024 = arith.constant 1024 : index 
dag:46'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
          4:  %c0 = arith.constant 0 : index 
dag:46'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
dag:46'1      ?                               possible intended match
          5:  %c1 = arith.constant 1 : index 
dag:46'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
          6:  %c2 = arith.constant 2 : index 
dag:46'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
          7:  %c3 = arith.constant 3 : index 
dag:46'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
          8:  %c12 = arith.constant 12 : index 
dag:46'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
          9:  %reinterpret_cast = memref.reinterpret_cast %arg0 to offset: [%c1024], sizes: [256], strides: [%c1] : memref<*xbf16> to memref<256xbf16, strided<[?], offset: ?>> 
dag:46'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
          .
          .
          .
>>>>>>

--

********************
PASS: TRITON-SHARED :: Conversion/TritonToLinalg/wraparound_stacked.mlir (6 of 57)
FAIL: TRITON-SHARED :: Conversion/TritonToLinalg/addptr_for_expand_ptr.mlir (7 of 57)
******************** TEST 'TRITON-SHARED :: Conversion/TritonToLinalg/addptr_for_expand_ptr.mlir' FAILED ********************
Script:
--
: 'RUN: at line 1';   /home/nhat/github/triton/python/build/cmake.linux-x86_64-cpython-3.9/third_party/triton_shared/tools/triton-shared-opt/triton-shared-opt --triton-to-linalg /home/nhat/github/triton/third_party/triton_shared/test/Conversion/TritonToLinalg/addptr_for_expand_ptr.mlir | FileCheck /home/nhat/github/triton/third_party/triton_shared/test/Conversion/TritonToLinalg/addptr_for_expand_ptr.mlir
--
Exit Code: 1

Command Output (stderr):
--
/home/nhat/github/triton/third_party/triton_shared/test/Conversion/TritonToLinalg/addptr_for_expand_ptr.mlir:47:15: error: CHECK-DAG: expected string not found in input
// CHECK-DAG: %[[VAL_4:.*]] = arith.constant 5 : index
              ^
<stdin>:2:116: note: scanning from here
 func.func @kernel(%arg0: memref<*xbf16>, %arg1: i32, %arg2: i32, %arg3: i32, %arg4: i32, %arg5: i32, %arg6: i32) {
                                                                                                                   ^
<stdin>:3:2: note: possible intended match here
 %c2 = arith.constant 2 : index
 ^

Input file: <stdin>
Check file: /home/nhat/github/triton/third_party/triton_shared/test/Conversion/TritonToLinalg/addptr_for_expand_ptr.mlir

-dump-input=help explains the following input dump.

Input was:
<<<<<<
          1: module { 
          2:  func.func @kernel(%arg0: memref<*xbf16>, %arg1: i32, %arg2: i32, %arg3: i32, %arg4: i32, %arg5: i32, %arg6: i32) { 
dag:47'0                                                                                                                        X error: no match found
          3:  %c2 = arith.constant 2 : index 
dag:47'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
dag:47'1      ?                               possible intended match
          4:  %c256 = arith.constant 256 : index 
dag:47'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
          5:  %c1024 = arith.constant 1024 : index 
dag:47'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
          6:  %c0 = arith.constant 0 : index 
dag:47'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
          7:  %c12 = arith.constant 12 : index 
dag:47'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
          8:  %c3 = arith.constant 3 : index 
dag:47'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
          .
          .
          .
>>>>>>

--

********************
PASS: TRITON-SHARED :: Conversion/TritonToLinalg/kernel-03-matrix-multiplication.mlir (8 of 57)
PASS: TRITON-SHARED :: Conversion/TritonToLinalg/reducesum_middle_dim.mlir (9 of 57)
PASS: TRITON-SHARED :: Conversion/TritonToLinalg/kernel-05-layer-norm-fwd.mlir (10 of 57)
PASS: TRITON-SHARED :: Conversion/TritonToLinalg/wraparound_side_by_side.mlir (11 of 57)
PASS: TRITON-SHARED :: Conversion/TritonToLinalg/addptr_scalar_nested.mlir (12 of 57)
FAIL: TRITON-SHARED :: Conversion/TritonToLinalg/addptr_mul_const_const.mlir (13 of 57)
******************** TEST 'TRITON-SHARED :: Conversion/TritonToLinalg/addptr_mul_const_const.mlir' FAILED ********************
Script:
--
: 'RUN: at line 1';   /home/nhat/github/triton/python/build/cmake.linux-x86_64-cpython-3.9/third_party/triton_shared/tools/triton-shared-opt/triton-shared-opt --triton-to-linalg /home/nhat/github/triton/third_party/triton_shared/test/Conversion/TritonToLinalg/addptr_mul_const_const.mlir | FileCheck /home/nhat/github/triton/third_party/triton_shared/test/Conversion/TritonToLinalg/addptr_mul_const_const.mlir
--
Exit Code: 1

Command Output (stderr):
--
/home/nhat/github/triton/third_party/triton_shared/test/Conversion/TritonToLinalg/addptr_mul_const_const.mlir:40:11: error: CHECK: expected string not found in input
// CHECK: %[[VAL_10:.*]] = memref.reinterpret_cast %[[VAL_0]] to offset: {{\[}}%[[VAL_9]]], sizes: [1024], strides: {{\[}}21] : memref<*xbf16> to memref<1024xbf16, strided<[21], offset: ?>>
          ^
<stdin>:6:37: note: scanning from here
 %1 = arith.addi %0, %c20480 : index
                                    ^
<stdin>:6:37: note: with "VAL_0" equal to "arg0"
 %1 = arith.addi %0, %c20480 : index
                                    ^
<stdin>:6:37: note: with "VAL_9" equal to "1"
 %1 = arith.addi %0, %c20480 : index
                                    ^
<stdin>:9:16: note: possible intended match here
 %reinterpret_cast_0 = memref.reinterpret_cast %arg1 to offset: [%2], sizes: [1024], strides: [1] : memref<*xbf16> to memref<1024xbf16, strided<[1], offset: ?>>
               ^

Input file: <stdin>
Check file: /home/nhat/github/triton/third_party/triton_shared/test/Conversion/TritonToLinalg/addptr_mul_const_const.mlir

-dump-input=help explains the following input dump.

Input was:
<<<<<<
            1: module { 
            2:  func.func @kernel(%arg0: memref<*xbf16>, %arg1: memref<*xbf16>, %arg2: i32, %arg3: i32, %arg4: i32, %arg5: i32, %arg6: i32, %arg7: i32, %arg8: i32) { 
            3:  %c11 = arith.constant 11 : index 
            4:  %c20480 = arith.constant 20480 : index 
            5:  %0 = arith.index_cast %arg6 : i32 to index 
            6:  %1 = arith.addi %0, %c20480 : index 
check:40'0                                         X error: no match found
check:40'1                                           with "VAL_0" equal to "arg0"
check:40'2                                           with "VAL_9" equal to "1"
            7:  %reinterpret_cast = memref.reinterpret_cast %arg0 to offset: [%1], sizes: [1024], strides: [%c11] : memref<*xbf16> to memref<1024xbf16, strided<[?], offset: ?>> 
check:40'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            8:  %2 = arith.index_cast %arg6 : i32 to index 
check:40'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            9:  %reinterpret_cast_0 = memref.reinterpret_cast %arg1 to offset: [%2], sizes: [1024], strides: [1] : memref<*xbf16> to memref<1024xbf16, strided<[1], offset: ?>> 
check:40'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
check:40'3                    ?                                                                                                                                                  possible intended match
           10:  %alloc = memref.alloc() : memref<1024xbf16> 
check:40'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           11:  memref.copy %reinterpret_cast, %alloc : memref<1024xbf16, strided<[?], offset: ?>> to memref<1024xbf16> 
check:40'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           12:  %3 = bufferization.to_tensor %alloc restrict writable : memref<1024xbf16> 
check:40'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           13:  memref.tensor_store %3, %reinterpret_cast_0 : memref<1024xbf16, strided<[1], offset: ?>> 
check:40'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           14:  return 
check:40'0     ~~~~~~~~
            .
            .
            .
>>>>>>

--

********************
FAIL: TRITON-SHARED :: Conversion/TritonToLinalg/addptr_reshape_broadcast.mlir (14 of 57)
******************** TEST 'TRITON-SHARED :: Conversion/TritonToLinalg/addptr_reshape_broadcast.mlir' FAILED ********************
Script:
--
: 'RUN: at line 1';   /home/nhat/github/triton/python/build/cmake.linux-x86_64-cpython-3.9/third_party/triton_shared/tools/triton-shared-opt/triton-shared-opt --triton-to-linalg /home/nhat/github/triton/third_party/triton_shared/test/Conversion/TritonToLinalg/addptr_reshape_broadcast.mlir | FileCheck /home/nhat/github/triton/third_party/triton_shared/test/Conversion/TritonToLinalg/addptr_reshape_broadcast.mlir
--
Exit Code: 1

Command Output (stderr):
--
/home/nhat/github/triton/third_party/triton_shared/test/Conversion/TritonToLinalg/addptr_reshape_broadcast.mlir:36:11: error: CHECK: expected string not found in input
// CHECK: %[[VAL_7:.*]] = memref.reinterpret_cast %[[VAL_1]] to offset: {{\[}}6656], sizes: [256, 128], strides: [2, 18] : memref<*xbf16> to memref<256x128xbf16, strided<[2, 18], offset: 6656>>
          ^
<stdin>:2:139: note: scanning from here
 func.func @kernel(%arg0: memref<*xbf16>, %arg1: memref<*xbf16>, %arg2: i32, %arg3: i32, %arg4: i32, %arg5: i32, %arg6: i32, %arg7: i32) {
                                                                                                                                          ^
<stdin>:2:139: note: with "VAL_1" equal to "arg1"
 func.func @kernel(%arg0: memref<*xbf16>, %arg1: memref<*xbf16>, %arg2: i32, %arg3: i32, %arg4: i32, %arg5: i32, %arg6: i32, %arg7: i32) {
                                                                                                                                          ^
<stdin>:4:14: note: possible intended match here
 %reinterpret_cast = memref.reinterpret_cast %arg1 to offset: [6656], sizes: [256, 128], strides: [1, %c6] : memref<*xbf16> to memref<256x128xbf16, strided<[1, ?], offset: 6656>>
             ^

Input file: <stdin>
Check file: /home/nhat/github/triton/third_party/triton_shared/test/Conversion/TritonToLinalg/addptr_reshape_broadcast.mlir

-dump-input=help explains the following input dump.

Input was:
<<<<<<
            1: module { 
            2:  func.func @kernel(%arg0: memref<*xbf16>, %arg1: memref<*xbf16>, %arg2: i32, %arg3: i32, %arg4: i32, %arg5: i32, %arg6: i32, %arg7: i32) { 
check:36'0                                                                                                                                               X error: no match found
check:36'1                                                                                                                                                 with "VAL_1" equal to "arg1"
            3:  %c6 = arith.constant 6 : index 
check:36'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            4:  %reinterpret_cast = memref.reinterpret_cast %arg1 to offset: [6656], sizes: [256, 128], strides: [1, %c6] : memref<*xbf16> to memref<256x128xbf16, strided<[1, ?], offset: 6656>> 
check:36'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
check:36'2                  ?                                                                                                                                                                      possible intended match
            5:  %alloc = memref.alloc() : memref<256x128xbf16> 
check:36'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            6:  memref.copy %reinterpret_cast, %alloc : memref<256x128xbf16, strided<[1, ?], offset: 6656>> to memref<256x128xbf16> 
check:36'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            7:  %0 = bufferization.to_tensor %alloc restrict writable : memref<256x128xbf16> 
check:36'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            8:  memref.tensor_store %0, %reinterpret_cast : memref<256x128xbf16, strided<[1, ?], offset: 6656>> 
check:36'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            9:  return 
check:36'0     ~~~~~~~~
            .
            .
            .
>>>>>>

--

********************
PASS: TRITON-SHARED :: Conversion/TritonToLinalg/convert_2d_elemwise_arith_ternary.mlir (15 of 57)
PASS: TRITON-SHARED :: Conversion/TritonToLinalg/convert_1d_elemwise_arith_binary.mlir (16 of 57)
PASS: TRITON-SHARED :: Conversion/TritonToLinalg/convert_minmax_reduce.mlir (17 of 57)
PASS: TRITON-SHARED :: Conversion/TritonToLinalg/convert_1d_elemwise_arith_ternary.mlir (18 of 57)
PASS: TRITON-SHARED :: Conversion/TritonToLinalg/dot.mlir (19 of 57)
PASS: TRITON-SHARED :: Conversion/TritonToLinalg/cumsum.mlir (20 of 57)
FAIL: TRITON-SHARED :: Conversion/TritonToLinalg/addptr_scalar_splat_2d.mlir (21 of 57)
******************** TEST 'TRITON-SHARED :: Conversion/TritonToLinalg/addptr_scalar_splat_2d.mlir' FAILED ********************
Script:
--
: 'RUN: at line 1';   /home/nhat/github/triton/python/build/cmake.linux-x86_64-cpython-3.9/third_party/triton_shared/tools/triton-shared-opt/triton-shared-opt --triton-to-linalg /home/nhat/github/triton/third_party/triton_shared/test/Conversion/TritonToLinalg/addptr_scalar_splat_2d.mlir | FileCheck /home/nhat/github/triton/third_party/triton_shared/test/Conversion/TritonToLinalg/addptr_scalar_splat_2d.mlir
--
Exit Code: 1

Command Output (stderr):
--
/home/nhat/github/triton/third_party/triton_shared/test/Conversion/TritonToLinalg/addptr_scalar_splat_2d.mlir:41:11: error: CHECK: expected string not found in input
// CHECK: %[[VAL_12:.*]] = memref.reinterpret_cast %[[VAL_1]] to offset: {{\[}}%[[VAL_11]]], sizes: [128, 128], strides: [2, 1] : memref<*xf32> to memref<128x128xf32, strided<[2, 1], offset: ?>>
          ^
<stdin>:7:35: note: scanning from here
 %2 = arith.addi %1, %c128 : index
                                  ^
<stdin>:7:35: note: with "VAL_1" equal to "arg1"
 %2 = arith.addi %1, %c128 : index
                                  ^
<stdin>:7:35: note: with "VAL_11" equal to "2"
 %2 = arith.addi %1, %c128 : index
                                  ^
<stdin>:8:14: note: possible intended match here
 %reinterpret_cast = memref.reinterpret_cast %arg1 to offset: [%2], sizes: [128, 128], strides: [1, 1] : memref<*xf32> to memref<128x128xf32, strided<[1, 1], offset: ?>>
             ^

Input file: <stdin>
Check file: /home/nhat/github/triton/third_party/triton_shared/test/Conversion/TritonToLinalg/addptr_scalar_splat_2d.mlir

-dump-input=help explains the following input dump.

Input was:
<<<<<<
            1: #map = affine_map<(d0, d1) -> (d0, d1)> 
            2: module { 
            3:  func.func @kernel(%arg0: memref<*xf32> {tt.divisibility = 16 : i32}, %arg1: memref<*xf32> {tt.divisibility = 16 : i32}, %arg2: i32, %arg3: i32, %arg4: i32, %arg5: i32, %arg6: i32, %arg7: i32, %arg8: i32, %arg9: i32, %arg10: i32) { 
            4:  %c128 = arith.constant 128 : index 
            5:  %0 = arith.muli %arg8, %arg2 : i32 
            6:  %1 = arith.index_cast %0 : i32 to index 
            7:  %2 = arith.addi %1, %c128 : index 
check:41'0                                       X error: no match found
check:41'1                                         with "VAL_1" equal to "arg1"
check:41'2                                         with "VAL_11" equal to "2"
            8:  %reinterpret_cast = memref.reinterpret_cast %arg1 to offset: [%2], sizes: [128, 128], strides: [1, 1] : memref<*xf32> to memref<128x128xf32, strided<[1, 1], offset: ?>> 
check:41'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
check:41'3                  ?                                                                                                                                                             possible intended match
            9:  %alloc = memref.alloc() : memref<128x128xf32> 
check:41'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           10:  memref.copy %reinterpret_cast, %alloc : memref<128x128xf32, strided<[1, 1], offset: ?>> to memref<128x128xf32> 
check:41'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           11:  %3 = bufferization.to_tensor %alloc restrict writable : memref<128x128xf32> 
check:41'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           12:  %4 = linalg.generic {indexing_maps = [#map, #map], iterator_types = ["parallel", "parallel"]} ins(%3 : tensor<128x128xf32>) outs(%3 : tensor<128x128xf32>) { 
check:41'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           13:  ^bb0(%in: f32, %out: f32): 
check:41'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            .
            .
            .
>>>>>>

--

********************
PASS: TRITON-SHARED :: Conversion/TritonToLinalg/masked_ldst_2d.mlir (22 of 57)
PASS: TRITON-SHARED :: Conversion/TritonToLinalg/kernel-02-fused-softmax.mlir (23 of 57)
PASS: TRITON-SHARED :: Conversion/TritonToLinalg/reducesum_512_256_bf16_axis0.mlir (24 of 57)
FAIL: TRITON-SHARED :: Conversion/TritonToLinalg/addptr_scalar_for_2d.mlir (25 of 57)
******************** TEST 'TRITON-SHARED :: Conversion/TritonToLinalg/addptr_scalar_for_2d.mlir' FAILED ********************
Script:
--
: 'RUN: at line 1';   /home/nhat/github/triton/python/build/cmake.linux-x86_64-cpython-3.9/third_party/triton_shared/tools/triton-shared-opt/triton-shared-opt --triton-to-linalg /home/nhat/github/triton/third_party/triton_shared/test/Conversion/TritonToLinalg/addptr_scalar_for_2d.mlir | FileCheck /home/nhat/github/triton/third_party/triton_shared/test/Conversion/TritonToLinalg/addptr_scalar_for_2d.mlir
--
Exit Code: 1

Command Output (stderr):
--
/home/nhat/github/triton/third_party/triton_shared/test/Conversion/TritonToLinalg/addptr_scalar_for_2d.mlir:69:11: error: CHECK: expected string not found in input
// CHECK: %[[VAL_22:.*]] = memref.reinterpret_cast %[[VAL_1]] to offset: {{\[}}%[[VAL_21]]], sizes: [128, 128], strides: [2, 1] : memref<*xf32> to memref<128x128xf32, strided<[2, 1], offset: ?>>
          ^
<stdin>:14:39: note: scanning from here
 %8 = arith.addi %arg13, %c128 : index
                                      ^
<stdin>:14:39: note: with "VAL_1" equal to "arg1"
 %8 = arith.addi %arg13, %c128 : index
                                      ^
<stdin>:14:39: note: with "VAL_21" equal to "8"
 %8 = arith.addi %arg13, %c128 : index
                                      ^
<stdin>:15:16: note: possible intended match here
 %reinterpret_cast_0 = memref.reinterpret_cast %arg1 to offset: [%8], sizes: [128, 128], strides: [1, 1] : memref<*xf32> to memref<128x128xf32, strided<[1, 1], offset: ?>>
               ^

Input file: <stdin>
Check file: /home/nhat/github/triton/third_party/triton_shared/test/Conversion/TritonToLinalg/addptr_scalar_for_2d.mlir

-dump-input=help explains the following input dump.

Input was:
<<<<<<
            .
            .
            .
            9:  %0 = tensor.empty() : tensor<128x128xf32> 
           10:  %1 = linalg.fill ins(%cst : f32) outs(%0 : tensor<128x128xf32>) -> tensor<128x128xf32> 
           11:  %2 = arith.muli %arg8, %arg2 : i32 
           12:  %3 = arith.index_cast %2 : i32 to index 
           13:  %4:2 = scf.for %arg11 = %c0 to %c12 step %c3 iter_args(%arg12 = %1, %arg13 = %3) -> (tensor<128x128xf32>, index) { 
           14:  %8 = arith.addi %arg13, %c128 : index 
check:69'0                                           X error: no match found
check:69'1                                             with "VAL_1" equal to "arg1"
check:69'2                                             with "VAL_21" equal to "8"
           15:  %reinterpret_cast_0 = memref.reinterpret_cast %arg1 to offset: [%8], sizes: [128, 128], strides: [1, 1] : memref<*xf32> to memref<128x128xf32, strided<[1, 1], offset: ?>> 
check:69'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
check:69'3                    ?                                                                                                                                                             possible intended match
           16:  %alloc = memref.alloc() : memref<128x128xf32> 
check:69'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           17:  memref.copy %reinterpret_cast_0, %alloc : memref<128x128xf32, strided<[1, 1], offset: ?>> to memref<128x128xf32> 
check:69'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           18:  %9 = bufferization.to_tensor %alloc restrict writable : memref<128x128xf32> 
check:69'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           19:  %10 = linalg.generic {indexing_maps = [#map, #map], iterator_types = ["parallel", "parallel"]} ins(%9 : tensor<128x128xf32>) outs(%9 : tensor<128x128xf32>) { 
check:69'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           20:  ^bb0(%in: f32, %out: f32): 
check:69'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            .
            .
            .
>>>>>>

--

********************
PASS: TRITON-SHARED :: Conversion/TritonToLinalg/masked_ldst_sitofp_other.mlir (26 of 57)
PASS: TRITON-SHARED :: Conversion/TritonToLinalg/kernel-05-layer-norm-dwdb.mlir (27 of 57)
XFAIL: TRITON-SHARED :: Conversion/TritonToLinalg/wraparound_unsupported_add_offset.mlir (28 of 57)
FAIL: TRITON-SHARED :: Conversion/TritonToLinalg/addptr_scalar_broadcast.mlir (29 of 57)
******************** TEST 'TRITON-SHARED :: Conversion/TritonToLinalg/addptr_scalar_broadcast.mlir' FAILED ********************
Script:
--
: 'RUN: at line 1';   /home/nhat/github/triton/python/build/cmake.linux-x86_64-cpython-3.9/third_party/triton_shared/tools/triton-shared-opt/triton-shared-opt --triton-to-linalg /home/nhat/github/triton/third_party/triton_shared/test/Conversion/TritonToLinalg/addptr_scalar_broadcast.mlir | FileCheck /home/nhat/github/triton/third_party/triton_shared/test/Conversion/TritonToLinalg/addptr_scalar_broadcast.mlir
--
Exit Code: 1

Command Output (stderr):
--
/home/nhat/github/triton/third_party/triton_shared/test/Conversion/TritonToLinalg/addptr_scalar_broadcast.mlir:51:11: error: CHECK: expected string not found in input
// CHECK: %[[VAL_10:.*]] = memref.reinterpret_cast %[[VAL_1]] to offset: {{\[}}%[[VAL_9]]], sizes: [1024, 1024], strides: [2, 1] : memref<*xf32> to memref<1024x1024xf32, strided<[2, 1], offset: ?>>
          ^
<stdin>:5:41: note: scanning from here
 %1 = arith.index_cast %0 : i32 to index
                                        ^
<stdin>:5:41: note: with "VAL_1" equal to "arg1"
 %1 = arith.index_cast %0 : i32 to index
                                        ^
<stdin>:5:41: note: with "VAL_9" equal to "1"
 %1 = arith.index_cast %0 : i32 to index
                                        ^
<stdin>:6:14: note: possible intended match here
 %reinterpret_cast = memref.reinterpret_cast %arg1 to offset: [%1], sizes: [1024, 1024], strides: [1, 1] : memref<*xf32> to memref<1024x1024xf32, strided<[1, 1], offset: ?>>
             ^

Input file: <stdin>
Check file: /home/nhat/github/triton/third_party/triton_shared/test/Conversion/TritonToLinalg/addptr_scalar_broadcast.mlir

-dump-input=help explains the following input dump.

Input was:
<<<<<<
            1: #map = affine_map<(d0, d1) -> (d0, d1)> 
            2: module { 
            3:  func.func @kernel(%arg0: memref<*xf32> {tt.divisibility = 16 : i32}, %arg1: memref<*xf32> {tt.divisibility = 16 : i32}, %arg2: i32, %arg3: i32, %arg4: i32, %arg5: i32, %arg6: i32, %arg7: i32, %arg8: i32, %arg9: i32, %arg10: i32) { 
            4:  %0 = arith.muli %arg8, %arg2 : i32 
            5:  %1 = arith.index_cast %0 : i32 to index 
check:51'0                                             X error: no match found
check:51'1                                               with "VAL_1" equal to "arg1"
check:51'2                                               with "VAL_9" equal to "1"
            6:  %reinterpret_cast = memref.reinterpret_cast %arg1 to offset: [%1], sizes: [1024, 1024], strides: [1, 1] : memref<*xf32> to memref<1024x1024xf32, strided<[1, 1], offset: ?>> 
check:51'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
check:51'3                  ?                                                                                                                                                                 possible intended match
            7:  %alloc = memref.alloc() : memref<1024x1024xf32> 
check:51'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            8:  memref.copy %reinterpret_cast, %alloc : memref<1024x1024xf32, strided<[1, 1], offset: ?>> to memref<1024x1024xf32> 
check:51'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            9:  %2 = bufferization.to_tensor %alloc restrict writable : memref<1024x1024xf32> 
check:51'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           10:  %3 = linalg.generic {indexing_maps = [#map, #map], iterator_types = ["parallel", "parallel"]} ins(%2 : tensor<1024x1024xf32>) outs(%2 : tensor<1024x1024xf32>) { 
check:51'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           11:  ^bb0(%in: f32, %out: f32): 
check:51'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            .
            .
            .
>>>>>>

--

********************
PASS: TRITON-SHARED :: Conversion/TritonToLinalg/addptr_for_accumulation.mlir (30 of 57)
PASS: TRITON-SHARED :: Conversion/TritonToLinalg/use_end_chain.mlir (31 of 57)
PASS: TRITON-SHARED :: Conversion/TritonToLinalg/block_ptr_advance.mlir (32 of 57)
PASS: TRITON-SHARED :: Conversion/TritonToLinalg/reducesum_scalar.mlir (33 of 57)
PASS: TRITON-SHARED :: Conversion/TritonToLinalg/addptr_loopback.mlir (34 of 57)
PASS: TRITON-SHARED :: Conversion/TritonToLinalg/addptr_2d_example.mlir (35 of 57)
PASS: TRITON-SHARED :: Conversion/TritonToLinalg/addptr_scalar_for.mlir (36 of 57)
PASS: TRITON-SHARED :: Conversion/TritonToLinalg/reducemax_32_256_bf16.mlir (37 of 57)
PASS: TRITON-SHARED :: Conversion/TritonToLinalg/use_dot_opc.mlir (38 of 57)
PASS: TRITON-SHARED :: Conversion/TritonToLinalg/addptr_dim1.mlir (39 of 57)
PASS: TRITON-SHARED :: Conversion/TritonToLinalg/kernel-01-vector-add.mlir (40 of 57)
PASS: TRITON-SHARED :: Conversion/TritonToLinalg/convert_splat_float.mlir (41 of 57)
PASS: TRITON-SHARED :: Conversion/TritonToLinalg/convert_2d_elemwise_arith_unary.mlir (42 of 57)
PASS: TRITON-SHARED :: Conversion/TritonToLinalg/arith_not_ptr_arith.mlir (43 of 57)
PASS: TRITON-SHARED :: Conversion/TritonToLinalg/addptr_add_value.mlir (44 of 57)
PASS: TRITON-SHARED :: Conversion/TritonToLinalg/addptr_scalar_splat.mlir (45 of 57)
PASS: TRITON-SHARED :: Conversion/TritonToLinalg/convert_1d_elemwise_arith_unary.mlir (46 of 57)
PASS: TRITON-SHARED :: Conversion/TritonToLinalg/masked_ldst_1d.mlir (47 of 57)
PASS: TRITON-SHARED :: Conversion/TritonToLinalg/reducesum_512_256_f32_axis1.mlir (48 of 57)
PASS: TRITON-SHARED :: Conversion/TritonToLinalg/get_num_programs.mlir (49 of 57)
PASS: TRITON-SHARED :: Conversion/TritonToLinalg/use_mid_chain.mlir (50 of 57)
PASS: TRITON-SHARED :: Conversion/TritonToLinalg/addptr_nested.mlir (51 of 57)
PASS: TRITON-SHARED :: Conversion/TritonToLinalg/triton_assert.mlir (52 of 57)
PASS: TRITON-SHARED :: Conversion/TritonToLinalg/reducesum_512_256_bf16_axis1.mlir (53 of 57)
PASS: TRITON-SHARED :: Conversion/TritonToLinalg/convert_addi_reduce.mlir (54 of 57)
PASS: TRITON-SHARED :: Conversion/TritonToLinalg/bitcast.mlir (55 of 57)
PASS: TRITON-SHARED :: Conversion/TritonToLinalg/convert_2d_elemwise_arith_binary.mlir (56 of 57)
PASS: TRITON-SHARED :: Conversion/TritonToLinalg/addptr_scalar_loopback.mlir (57 of 57)
********************
Failed Tests (10):
  TRITON-SHARED :: Conversion/TritonToLinalg/addptr_for_expand_ptr.mlir
  TRITON-SHARED :: Conversion/TritonToLinalg/addptr_for_more_init_args.mlir
  TRITON-SHARED :: Conversion/TritonToLinalg/addptr_for_used_after_update.mlir
  TRITON-SHARED :: Conversion/TritonToLinalg/addptr_for_used_before_update.mlir
  TRITON-SHARED :: Conversion/TritonToLinalg/addptr_mul_const_const.mlir
  TRITON-SHARED :: Conversion/TritonToLinalg/addptr_mul_value_const.mlir
  TRITON-SHARED :: Conversion/TritonToLinalg/addptr_reshape_broadcast.mlir
  TRITON-SHARED :: Conversion/TritonToLinalg/addptr_scalar_broadcast.mlir
  TRITON-SHARED :: Conversion/TritonToLinalg/addptr_scalar_for_2d.mlir
  TRITON-SHARED :: Conversion/TritonToLinalg/addptr_scalar_splat_2d.mlir


Testing Time: 0.10s
  Passed           : 46
  Expectedly Failed:  1
  Failed           : 10
