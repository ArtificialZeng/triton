name: TorchBench Nightly

on:
  workflow_dispatch:

env:
  TRITON_USE_ASSERT_ENABLED_LLVM: "TRUE"

jobs:
  TorchBench-Nvidia:
    runs-on: [self-hosted, A100]

    steps:
      - name: Checkout TorchBench
        uses: actions/checkout@v4
        with:
          repository: 'pytorch/benchmark'
          ref: '7dc8e8113f8d5dc97aaa2bef94f9d389047cfcde'
          path: 'torchbench'
          submodules: 'recursive'

      - name: Create Python venv
        run: |
          python3 -m venv ${HOME}/torchbench/venv
          source ${HOME}/torchbench/venv/bin/activate
          echo PATH=${PATH} >> $GITHUB_ENV

      # We don't want to use to use TorchBench nightlies here
      - name: Install TorchBench and models
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install --upgrade torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu121
          cd torchbench
          python3 install.py detectron2_fasterrcnn_r_101_c4

      - name: Install the latest Triton wheel
        run: |
          python3 -m pip install --upgrade triton-nightly --index-url https://aiinfra.pkgs.visualstudio.com/PublicPackages/_packaging/Triton-Nightly/pypi/simple/

      - name: Tune Nvidia GPU
        run: |
          sudo nvidia-smi -pm 1
          sudo nvidia-smi --lock-gpu-clocks=1280,1280
          nvidia-smi

      - name: Run TorchBench
        run: |
          cd torchbench
          python3 test.py -v TestBenchmark.test_detectron2_fasterrcnn_r_101_c4_train_cuda

      - name: Cleanup and reset GPU clocks
        if: always()
        run: |
          sudo nvidia-smi -i 0 -rgc
