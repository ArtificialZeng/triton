name: TorchBench Nightly

on:
  workflow_dispatch:

env:
  TRITON_USE_ASSERT_ENABLED_LLVM: "TRUE"

jobs:
  TorchBench-Nvidia:
    runs-on: ubuntu-latest #[self-hosted, A100]

    steps:
      - name: Checkout TorchBench
        uses: actions/checkout@v4
        with:
          repository: 'pytorch/benchmark'
          ref: '7dc8e8113f8d5dc97aaa2bef94f9d389047cfcde'
          path: 'torchbench'
          submodules: 'recursive'

      - name: Update PATH
        run: |
          echo "BACKEND=CUDA" >> "${GITHUB_ENV}"
          echo "PATH=${HOME}/.local/bin:${PATH}" >> "${GITHUB_ENV}"
          df -h
          du --max-depth=1 -h

      # We don't want to use to use TorchBench nightlies here
      # Force user install, TorchBench expects a conda environment
      - name: Install TorchBench and models
        run: |
          echo -e "[install]\nprefix=${HOME}/.local\n" > ${HOME}/.pydistutils.cfg
          python3 -m pip install --upgrade pip
          python3 -m pip install --upgrade torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118
          df -h
          du --max-depth=1 -h
          cd torchbench
          python3 install.py detectron2_fasterrcnn_r_101_c4
 
      - name: Install the latest Triton wheel
        run: |
          python3 -m pip install --upgrade triton-nightly --index-url https://aiinfra.pkgs.visualstudio.com/PublicPackages/_packaging/Triton-Nightly/pypi/simple/
          df -h
          du --max-depth=1 -h

      # - name: Tune Nvidia GPU
      #   run: |
      #     sudo nvidia-smi -pm 1
      #     sudo nvidia-smi --lock-gpu-clocks=1280,1280
      #     nvidia-smi

      - name: Run TorchBench
        run: |
          cd torchbench
          python3 test.py -v TestBenchmark.test_detectron2_fasterrcnn_r_101_c4_train_cuda

      # - name: Reset GPU clocks
      #   run: |
      #     sudo nvidia-smi -i 0 -rgc
